1. What database models do you know?
	- Hierarchical database model
	- Network model
	- Relational model
	- Entity–relationship model
	- Enhanced entity–relationship model
	- Object model
	- Document model
	- Entity–attribute–value model
	- Star schema
	
2. Which are the main functions performed by a Relational Database Management System (RDBMS)?
	- Database management system is designed to manage a database.
		- RDBMS Systems are very mature, rock solid.

		-> Popular RDBMS Servers: 
			- Microsoft SQL Server
			- Microsoft Access
			- Oracle MySQL
			- Database
			- IBM DB2
			- PostgreSQL (Open-sourse cloning of Oracle)
			- SQLite (.dll - Database Server / .db - DB data)
			- Sybase ASE

		- Using for management of relational data stored in tables.

		- Definition of relational schema (database schema).

		- Creating, modifying, deleting tables and relationships between them.

		- Adding, modifying, deleting, searching and retrieving data stored in tables.

		- SQL Language Support.

		- Management (maintenance) of transactions.
		
3. Define what is "table" in database terms.
	- A table is a collection of related data held in a structured format within a database. It consists of fields (columns), and rows.
		- a column is a set of data values of a particular simple type, one for each row of the table
		- Row represents information about one record.
		
	-> Schema of table (example):
        Persons (
            Id: number,
            FirstName: string,
            LastName: string,
            Employer: string
        )
		
4. Explain the difference between a primary and a foreign key.
	- Primary key is a column of the table that uniquely identifies its rows (usually its is a number)
	- The foreign key is an identifier of a record located in another table (usually its primary key)


5. Explain the different kinds of relationships between tables in relational databases.
	- Relationships between tables are based on interconnections: primary key / foreign key
	- One-to-many – e.g. country -> towns (Many towns in one country)
    - Many-to-many – e.g. students <-> courses (Many students in many courses and conversely) - Implemented through additional table
    - One-to-one – e.g. example human <- student (Using Inheritance)
    - Self-relationship - e.g. 1. Root <- 2. Documents (ParentId: 1) <- 3. Pictures (1) <- 4. Birthday Party (3)

6. When is a certain database schema normalized? What are the advantages of normalized databases?
	- Normalization removes repating data from certain column or group of columns.
	- Its made with extracting data to other tables and then adding relationships.
	- Avoing data duplication using unique data identifier (Primary key - usually number) from the new table (Master table).
	
7. What are database integrity constraints and when are they used?
	- Ensure data integrity in the database tables    
    - Enforce data rules whick cannot be violated
	* Used for Primary key:
        - Ensures unique value for each table row

    * Used for Unique key:
        - Ensures that all values in a certain column are unique

    * Used for Foreign key:
        - Ensures that the value in given column is a key from another table

    * Used for Check constraint (data restriction):
        - Ensures that values in a certain column meet some predefined condition

8. Point out the pros and cons of using indexes in a database.
	* pros:
		- speed up searching of values in a column
	* cons:
		- adding and deleting data is slower
		- May cause the system to restructure the index of structure (Hash Index, B-Tree, etc), which can be very computationally expensive.
        - Takes up more disk space - stores more data.
		
9. What's the main purpose of the SQL language?
	* Data Definition Language
		- CREATE, ALTER, DROP
		- Creating, altering, deleting tables and other objects in the database
	* Data Manipulation Language
		- SELECT, INSERT, UPDATE, DELETE
		- Searching, retrieving, inserting, modifying and deleting table data (rows)
	
10. What are transactions used for? Give an example.
	- Transactions are a sequence of database operations which are executed as a single unit:
		- Either all of them execute successfully
		- Or none of them is executed at all
	
	- Used of competitive data access.
	- Can be rolled back if they are not completed properly.
	
	EXAMPLE: 
		- A bank transfer from one account into another (withdrawal + deposit)
		- If either the withdrawal or the deposit fails the entire operation should be cancelled

11. What is a NoSQL database?
	- Use document-based model (non-relational)
    - Data stored as documents
    - Single entity (document) is a single record
    - Documents do not have a fixed structure

12. Explain the classical non-relational data models.
	- A non-relational database is a database that does not incorporate the table/key model that relational database management systems (RDBMS) promote.
    - These kinds of databases require data manipulation techniques and processes designed to provide solutions to big data problems that big companies face. 
    - The most popular emerging non-relational database is called NoSQL (Not Only SQL).

13. Give few examples of NoSQL databases and their pros and cons.

    -> Databases:
        - Cassandra (Distributed wide-column database)
        - MongoDB (Mature and powerful JSON-Document database)
        - CouchDB (JSON-based document database with REST API)
        - Redis (Ultra-fast in-memory data structures server)
        - H-Base
        - etc ...

    -> Models: 
        - Document model
        - Associative (Key-value) model
        - Hierarchical key-value model
        - Wide-column model
        - Object model
        - etc ...

    -> Pros: 
        - Support CRUD operations
        - Support Indexing and querying
        - Support concurrency and transactions
        - Highly optimized for append / retrieve
        - Great performance and scalability
        - etc ...

    -> Cons:
        - Difficult administration and support
        - etc ... 