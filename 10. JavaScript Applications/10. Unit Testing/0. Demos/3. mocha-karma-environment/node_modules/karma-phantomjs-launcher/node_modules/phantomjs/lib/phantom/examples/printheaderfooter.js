// Generated by CoffeeScript 1.7.1
(function() {
  var address, output, page, someCallback, system;

  someCallback = function(pageNum, numPages) {
    return "<h1> someCallback: " + pageNum + " / " + numPages + "</h1>";
  };

  page = require("webpage").create();

  system = require("system");

  if (system.args.length < 3) {
    console.log("Usage: printheaderfooter.js URL filename");
    phantom.exit(1);
  } else {
    address = system.args[1];
    output = system.args[2];
    page.viewportSize = {
      width: 600,
      height: 600
    };
    page.paperSize = {
      format: "A4",
      margin: "1cm",
      header: {
        height: "1cm",
        contents: phantom.callback(function(pageNum, numPages) {
          if (pageNum === 1) {
            return "";
          }
          return "<h1>Header <span style='float:right'>" + pageNum + " / " + numPages + "</span></h1>";
        })
      },
      footer: {
        height: "1cm",
        contents: phantom.callback(function(pageNum, numPages) {
          if (pageNum === numPages) {
            return "";
          }
          return "<h1>Footer <span style='float:right'>" + pageNum + " / " + numPages + "</span></h1>";
        })
      }
    };
    page.open(address, function(status) {
      var paperSize;
      if (status !== "success") {
        return console.log("Unable to load the address!");
      } else {
        if (page.evaluate(function() {
          return typeof PhantomJSPrinting === "object";
        })) {
          paperSize = page.paperSize;
          paperSize.header.height = page.evaluate(function() {
            return PhantomJSPrinting.header.height;
          });
          paperSize.header.contents = phantom.callback(function(pageNum, numPages) {
            return page.evaluate((function(pageNum, numPages) {
              return PhantomJSPrinting.header.contents(pageNum, numPages);
            }), pageNum, numPages);
          });
          paperSize.footer.height = page.evaluate(function() {
            return PhantomJSPrinting.footer.height;
          });
          paperSize.footer.contents = phantom.callback(function(pageNum, numPages) {
            return page.evaluate((function(pageNum, numPages) {
              return PhantomJSPrinting.footer.contents(pageNum, numPages);
            }), pageNum, numPages);
          });
          page.paperSize = paperSize;
          console.log(page.paperSize.header.height);
          console.log(page.paperSize.footer.height);
        }
        return window.setTimeout((function() {
          page.render(output);
          return phantom.exit();
        }), 200);
      }
    });
  }

}).call(this);

//# sourceMappingURL=printheaderfooter.map
