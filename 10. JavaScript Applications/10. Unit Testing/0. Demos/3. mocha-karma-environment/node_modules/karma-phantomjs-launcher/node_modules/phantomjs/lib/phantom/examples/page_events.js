// Generated by CoffeeScript 1.7.1
(function() {
  var logResources, page, printArgs, step1url, step2url, sys;

  printArgs = function() {
    var i, ilen;
    i = void 0;
    ilen = void 0;
    i = 0;
    ilen = arguments_.length;
    while (i < ilen) {
      console.log("    arguments[" + i + "] = " + JSON.stringify(arguments_[i]));
      ++i;
    }
    return console.log("");
  };

  sys = require("system");

  page = require("webpage").create();

  logResources = false;

  step1url = "http://en.wikipedia.org/wiki/DOM_events";

  step2url = "http://en.wikipedia.org/wiki/DOM_events#Event_flow";

  if (sys.args.length > 1 && sys.args[1] === "-v") {
    logResources = true;
  }

  page.onInitialized = function() {
    console.log("page.onInitialized");
    return printArgs.apply(this, arguments_);
  };

  page.onLoadStarted = function() {
    console.log("page.onLoadStarted");
    return printArgs.apply(this, arguments_);
  };

  page.onLoadFinished = function() {
    console.log("page.onLoadFinished");
    return printArgs.apply(this, arguments_);
  };

  page.onUrlChanged = function() {
    console.log("page.onUrlChanged");
    return printArgs.apply(this, arguments_);
  };

  page.onNavigationRequested = function() {
    console.log("page.onNavigationRequested");
    return printArgs.apply(this, arguments_);
  };

  if (logResources === true) {
    page.onResourceRequested = function() {
      console.log("page.onResourceRequested");
      return printArgs.apply(this, arguments_);
    };
    page.onResourceReceived = function() {
      console.log("page.onResourceReceived");
      return printArgs.apply(this, arguments_);
    };
  }

  page.onClosing = function() {
    console.log("page.onClosing");
    return printArgs.apply(this, arguments_);
  };

  page.onConsoleMessage = function() {
    console.log("page.onConsoleMessage");
    return printArgs.apply(this, arguments_);
  };

  page.onAlert = function() {
    console.log("page.onAlert");
    return printArgs.apply(this, arguments_);
  };

  page.onConfirm = function() {
    console.log("page.onConfirm");
    return printArgs.apply(this, arguments_);
  };

  page.onPrompt = function() {
    console.log("page.onPrompt");
    return printArgs.apply(this, arguments_);
  };

  setTimeout((function() {
    console.log("");
    console.log("### STEP 1: Load '" + step1url + "'");
    return page.open(step1url);
  }), 0);

  setTimeout((function() {
    console.log("");
    console.log("### STEP 2: Load '" + step2url + "' (load same URL plus FRAGMENT)");
    return page.open(step2url);
  }), 5000);

  setTimeout((function() {
    console.log("");
    console.log("### STEP 3: Click on page internal link (aka FRAGMENT)");
    return page.evaluate(function() {
      var ev;
      ev = document.createEvent("MouseEvents");
      ev.initEvent("click", true, true);
      return document.querySelector("a[href='#Event_object']").dispatchEvent(ev);
    });
  }), 10000);

  setTimeout((function() {
    console.log("");
    console.log("### STEP 4: Click on page external link");
    return page.evaluate(function() {
      var ev;
      ev = document.createEvent("MouseEvents");
      ev.initEvent("click", true, true);
      return document.querySelector("a[title='JavaScript']").dispatchEvent(ev);
    });
  }), 15000);

  setTimeout((function() {
    console.log("");
    console.log("### STEP 5: Close page and shutdown (with a delay)");
    page.close();
    return setTimeout((function() {
      return phantom.exit();
    }), 100);
  }), 20000);

}).call(this);

//# sourceMappingURL=page_events.map
